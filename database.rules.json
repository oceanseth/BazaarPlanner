{
  "rules": {
    "usernames": {
      "$displayName": {
        ".read": "true",
        ".write": "auth != null && data.parent().parent().child('users').child(auth.uid).child('displayName').val() === data.val()",
        ".validate": "newData.val().matches(/^[0-9a-zA-Z]*$/)"
      }
    },
    "users": {
      "$uid": {
        ".read": "true",
        ".write": "$uid === auth.uid",
        "isDonor": {
          ".validate": "!data.exists() || data.val() === true"
        },
        "runs": {
          ".read": "$uid === auth.uid",
          "$runId": {
            ".read": true
          }
        }
      }
    },
    "usersonline": {
      ".read": "true",
      ".indexOn": ".value",
      "$uid": {
        ".read": "true",
        ".write": "(auth != null && auth.uid === $uid) || 
                   (!newData.exists() && 
                    data.exists() && 
                    data.val() < (now - 1000*60*5))",
        ".validate": "!newData.exists() || newData.isNumber()"
      }
    },
    "puzzles": {
      "current": {
        ".read": true,
        ".write": false
      },
      "submissions": {
        "$submissionId": {
          ".read": true,
          ".write": "auth.uid === newData.child('byUID').val()"
        }
      },
      "$puzzleId": {
        "data": {
          ".read": true,
          ".write": false
        },
        "votes": {
          "$userId": {
            ".read": "$userId === auth.uid",
            ".write": "!data.exists() && auth.uid === $userId"
          }
        },
        "result":{
          ".write":false,
          ".read": "data.parent().child('votes').child(auth.uid).exists()"
        }
      }
    },
    "tinyurls": {
        "count": {
            ".read": true,
            ".write": "auth != null",
            ".validate": "newData.isNumber() && 
                        newData.val() === data.val() + 1",
        },
        "$count": {
            ".read": true,
            ".validate": "newData.child('url').exists() && 
                        newData.child('uid').exists() &&
                        $count == (data.parent().child('count').val()+1)+'' &&
                        newData.child('uid').val() === auth.uid",
            ".write": "auth != null"
        }
    },

    "polls": {
      "harmpoll": {
        "$voteType": {

          "$uid": {
            ".write": "$uid === auth.uid",

            ".validate": "!data.exists() && 
                         !root.child('polls/harmpoll/yes').child($uid).exists() && 
                         !root.child('polls/harmpoll/no').child($uid).exists() &&
                         newData.child('timestamp').exists()",
            ".read": true
          }
        },
        "counts": {
          ".read": true,
          "$voteType": {
            ".write": "auth !== null",
            ".validate": "newData.isNumber() && 
                        data.exists() && 
                        newData.val() === data.val() + 1 &&
                        // Verify the same update includes the user's vote
                        newData.parent().parent().child($voteType).child(auth.uid).exists() &&
                        !data.parent().parent().child($voteType).child(auth.uid).exists() &&
                        // Verify user hasn't voted in the other option
                        !root.child('polls/harmpoll/' + ($voteType === 'yes' ? 'no' : 'yes')).child(auth.uid).exists()"
          }
        }
      }
    }
  }
} 